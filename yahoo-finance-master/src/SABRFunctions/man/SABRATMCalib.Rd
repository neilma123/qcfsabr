% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/SABRATMCalib.R
\name{SABRATMCalib}
\alias{SABRATMCalib}
\title{ATM Calibration Procedure for SABR Parameters}
\usage{
SABRATMCalib(F0, ATMVol, Strikes, MarketVols, tex, Beta, guess_Rho, guess_Nu)
}
\arguments{
\item{F0}{Current forward rate}

\item{ATMVol}{Current lognormal ATM volatility corresponding to F0 in the market}

\item{Strikes}{VECTOR of strike prices}

\item{MarketVols}{VECTOR of LOGNORMAL (i.e. Black-76) market-quoted implied volatilities}

\item{tex}{Time to expiry of option, measured in years}

\item{Beta}{Shape parameter of SABR schema, EITHER evaluated using historical data OR preset by user}

\item{guess_Rho}{Initial user-defined guess of Rho value, MUST be bounded between -1 and 1}

\item{guess_Nu}{Initial user-defined guess of Nu value, MUST be non-zero}
}
\value{
List of outputs from the constrOptim function that includes the parameters for calibrated Rho/Nu
}
\description{
Calibrates Rho and Nu such that sum of square errors between Black-76-equivalent SABR vols and market observed vols are minimised.
For a given Rho and Nu, calculates ATM SABR Alpha from this, then calculates the resulting Black-76 vol, then takes SSE.
Minimses SSE function using non-linear optimisation.
}
\examples{
data(sabrcalibdata)
calibrun <- sabrcalibdata[sabrcalibdata$Point == '3M10Y',]
SABRATMCalib(F0 = 0.0266, ATMVol = 0.4084, Strikes = calibrun$Strike,
MarketVols = calibrun$BlackVol,  tex = 0.25, Beta = 0.5, guess_Rho = 0.05,
 guess_Nu = 0.5)
}
